{"version":3,"sources":["image.svg","logo.svg","Wish.js","components/Welcome.js","components/States.js","components/classState.js","components/Resume.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Component","Resume","props","info","data","profiles","location","profilesData","i","console","log","basic","className","src","Img","alt","style","width","name","career","Home","profile","map","value","index","key","to","pathname","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,mC,wVCA3CD,EAAOC,QAAU,IAA0B,kC,2NCETC,YCAGA,YCADA,YCAIA,Y,kBCIzB,SAASC,EAAOC,GAO3B,IAAIC,EAAOC,EAAKC,SAASH,EAAMI,SAASC,aAAaC,GAErD,OADAC,QAAQC,IAAIP,EAAKQ,OAEb,yBAAKC,UAAU,8BACX,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACX,yBAAKC,IAAKC,IAAKC,IAAI,eAAeC,MAAO,CAACC,MAAM,UAChD,4BAAKd,EAAKQ,MAAMO,SAMtB,yBAAKN,UAAU,gBACX,yBAAKA,UAAU,QACf,yBAAKA,UAAU,aACP,8CACA,2BAAIT,EAAKgB,Y,mBC8BjC,IAAIC,EAAK,WACP,IAAIC,EAAQjB,EAAKC,SAGjB,OAFAI,QAAQC,IAAIW,GAGV,yBAAKT,UAAU,8BACZS,EAAQC,KAAI,SAACC,EAAMC,GAAP,OACT,yBAAKZ,UAAU,mCAAmCa,IAAKD,GACrD,yBAAKZ,UAAU,QACb,yBAAKA,UAAU,aACX,yBAAKC,IAAKC,IAAKC,IAAI,eAAeC,MAAO,CAACC,MAAM,UAChD,4BAAKM,EAAMZ,MAAMO,MAEjB,kBAAC,IAAD,CAAMQ,GAAI,CAACC,SAAS,UAAWpB,aAAa,CAACC,EAAEgB,IAASZ,UAAU,mBAAlE,mBAgBHgB,EAzEf,WACE,OACI,yBAAKhB,UAAU,OAgCX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,QAASC,UAAWX,IACtC,kBAAC,IAAD,CAAOU,KAAK,UAAUC,UAAW9B,OCzCzB+B,QACW,cAA7BC,OAAO3B,SAAS4B,UAEe,UAA7BD,OAAO3B,SAAS4B,UAEhBD,OAAO3B,SAAS4B,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLvC,QAAQuC,MAAMA,EAAMC,c","file":"static/js/main.c18c8325.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image.24b1a359.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\r\n\r\nexport default class Wish extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n               <p>its my class based component</p> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Welcome extends Component {\r\n    render() {\r\n        console.log(this.props);\r\n\r\n        return (\r\n            \r\n            <div>\r\n                <h1>my name is {this.props.name} & my college is  {this.props.college}</h1>   \r\n                {this.props.children}             \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\n\r\nexport default class States extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            name:\"Rajesh\"\r\n        }\r\n    }\r\n    clickMe=()=>{\r\n        this.setState(\r\n            {\r\n                name:\"Rajesh Nalleboina\"\r\n            }\r\n        )\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Heare we are using states</h1>\r\n                <h2>{this.state.name}</h2>\r\n                <button onClick={()=> this.clickMe()}>Click Me...!</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class classState extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            count: 0\r\n        }\r\n    }\r\n    increment=()=>{\r\n        this.setState(\r\n            {count:this.state.count+1}\r\n            )\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>{this.state.count}</h1>\r\n                <button onClick={this.increment}>Increment</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport data from \"../data/data.json\";\r\nimport Img from '../image.svg';\r\n\r\n\r\n\r\nexport default function Resume(props) {\r\n    // fetch(\"data.json\")\r\n    // .then(res=>res.json())\r\n    // .then(data=>console.log(data))\r\n\r\n    // let info=data.profiles[props.location.data.i]\r\n    // console.log(info.basic.name)\r\n    let info = data.profiles[props.location.profilesData.i]\r\n    console.log(info.basic)\r\n    return (\r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"col-lg-3 m-2\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                  <img src={Img} alt=\"Profile Icon\" style={{width:\"10em\"}}  />\r\n                  <h1>{info.basic.name}</h1>\r\n              </div>\r\n\r\n            </div>\r\n            </div>\r\n\r\n            <div className=\"col-lg-8 m-2\">\r\n                <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                        <h2>Career Object:</h2>\r\n                        <p>{info.career}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Hello from \"./Hello\";\nimport Logo from './logo.svg';\nimport Img from './image.svg';\nimport Wish from \"./Wish\";\n// import Home from \"./Home\";\nimport Greeting from \"./components/Greeting\";\nimport Welcome from \"./components/Welcome\";\nimport States from \"./components/States\";\nimport ClassState from \"./components/classState\";\nimport Hooks from \"./components/Hooks\";\nimport data from \"./data/data.json\";\nimport Resume from \"./components/Resume\";\nimport { BrowserRouter,Route,Link  } from 'react-router-dom';\n\nfunction App() {\n  return (\n      <div className=\"App\">\n      \n        {/* <ClassState></ClassState>\n        <h1>Using Hooks</h1>\n        <Hooks /> */}\n          {/* <h1>APSSDC REACTJS</h1>\n    <h2>Rajesh APSSDC</h2>\n    <Home name=\"APSSDC\"/>\n    <Hello>\n      \n    </Hello>\n    <Wish /> */}\n\n    {/* <Greeting name=\"Rajesh\" mail=\"rajesh.n@apssdc.in\">\n       <img src={Logo} style={{width:\"200px\"}}/>\n    </Greeting>\n    <Greeting name=\"Varun\" mail=\"varun@gmailcom\">\n      <p> Hello APSSDC</p>\n      <p>Hello Sathyagopal</p>\n    </Greeting> */}\n\n    {/* Using welcome component */}\n      {/* <h1>We are creating Class Componet & pass the Pops</h1>\n      <Welcome name=\"Kasyap\" college=\"VVIT\">\n          <p> Hello Student how are you</p>\n      </Welcome>\n      <Welcome name=\"DP\" college=\"DNR\">\n        <p> Hello DP How are you ...!</p>\n      </Welcome> */}\n        \n        {/* states */}\n          {/* <States/> */}\n          <BrowserRouter>\n            <Route exact path=\"/home\"  component={Home}  />\n            <Route path=\"/resume\" component={Resume} />\n          \n          </BrowserRouter>\n          {/* <Home /> */}\n      </div>\n  );\n}\n\nlet Home=()=>{\n  let profile=data.profiles;\n  console.log(profile);\n  \n  return(\n    <div className=\"row justify-content-center\">\n      {profile.map((value,index)=>(\n          <div className=\"col-sm-10 col-md-4 col-lg-4 mt-1\" key={index}>\n            <div className=\"card\">\n              <div className=\"card-body\">\n                  <img src={Img} alt=\"Profile Icon\" style={{width:\"10em\"}}  />\n                  <h1>{value.basic.name}</h1>\n\n                  <Link to={{pathname:\"/resume\", profilesData:{i:index}}} className=\"btn btn-primary\">Profile</Link>\n\n              </div>\n\n            </div>\n          </div>\n        ))\n      }\n    </div>\n  );\n}\n  \n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}